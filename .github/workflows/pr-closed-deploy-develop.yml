name: 'CD: Deploy to develop on PR close'

on:
  pull_request:
    branches:
      - develop
    types: [closed]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  validate-environment-secrets:
    uses: ./.github/workflows/reusable-validate-environment-secrets.yml
    secrets: inherit
    with:
      environment_name: develop

  set-pipeline-variables:
    needs: validate-environment-secrets
    runs-on: ubuntu-latest
    outputs:
      LAMBDA_ZIP_KEY: ${{ steps.out.outputs.LAMBDA_ZIP_KEY }}
      LAMBDA_LAYER_ZIP_KEY: ${{ steps.out.outputs.LAMBDA_LAYER_ZIP_KEY }}
    env:
      lambda_function_name: lambda/${{ github.sha }}.zip
      lambda_layer_name:   lambda-layers/${{ github.sha }}.zip
    steps:
      - name: Set Lambda Outputs
        id: out
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo "LAMBDA_ZIP_KEY=$lambda_function_name" >> $GITHUB_OUTPUT
          echo "LAMBDA_LAYER_ZIP_KEY=$lambda_layer_name" >> $GITHUB_OUTPUT


  build-and-push:
    needs: set-pipeline-variables
    uses: ./.github/workflows/reusable-build-and-push.yml
    secrets: inherit
    with:
      LAMBDA_ZIP_KEY: ${{needs.set-pipeline-variables.outputs.LAMBDA_ZIP_KEY }}
      LAMBDA_LAYER_ZIP_KEY: ${{needs.set-pipeline-variables.outputs.LAMBDA_LAYER_ZIP_KEY }}

  tfc-run:
    needs: [build-and-push, set-pipeline-variables]
    uses: ./.github/workflows/reusable-plan-and-deploy-with-tfc.yml
    secrets: inherit
    with:
      LAMBDA_ZIP_KEY: ${{needs.set-pipeline-variables.outputs.LAMBDA_ZIP_KEY }}
      LAMBDA_LAYER_ZIP_KEY: ${{needs.set-pipeline-variables.outputs.LAMBDA_LAYER_ZIP_KEY }}

  update-lambda:
    needs: [tfc-run, set-pipeline-variables]
    uses: ./.github/workflows/reusable-update-lambda.yml
    secrets: inherit
    with:
      lambda_function_name: ${{ needs.tfc-run.outputs.lambda_function_name }}
      lambda_layer_arn: ${{ needs.tfc-run.outputs.lambda_layer_arn }}
      lambda_zip_key: ${{ needs.set-pipeline-variables.outputs.LAMBDA_ZIP_KEY }}
      lambda_layer_zip_key: ${{ needs.set-pipeline-variables.outputs.LAMBDA_LAYER_ZIP_KEY }}
